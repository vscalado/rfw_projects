name: Run Web Testing Workflow
run-name: ${{ github.actor }} On Push - Web Tests Run ðŸš€
on: [push]

jobs:
    web-test:
        runs-on: ubuntu-20.04
        permissions: write-all
        strategy:
            matrix:
                browser: [chromium, firefox, webkit]
            fail-fast: false
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3
            
            - name: Install Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.13'

            - name: Install Node.js 20.17
              uses: actions/setup-node@v4
              with:
                node-version: '20.17'
            
            - name: Install Python Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -U -r requirements.txt
                sudo npm install @playwright/test
                sudo npx playwright install-deps
                rfbrowser init
            
            - name: Run RF Web Tests
              run: |
                robot -d ./results -v HEADLESS:true \
                -v BROWSER:${{ matrix.browser }} ./rfw_githubaction/tests

            - name: Upload Test Results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: results-${{ matrix.browser }}
                path: ./results
                if-no-files-found: ignore
                retention-days: 2

            - name: Download reports
              if: always()            
              uses: actions/download-artifact@v4
              with:
                name: results-${{ matrix.browser }}

            - name: List downloaded files
              if: always()
              run: ls -R /home/runner/work/rfw_projects/rfw_projects
              
            - name: Send Report
              if: always()
              uses: joonvena/robotframework-reporter-action@v2.5
              with:
                report_path: results-${{ matrix.browser }}
                gh_access_token: ${{ secrets.GITHUB_TOKEN }}
                show_passed_tests: true